<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="ch.qos.logback.core.net.ObjectWriter"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ObjectWriter"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ObjectMapper"/>
    <fullyQualifiedTypeName name="java.util.Properties"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="com.bugbuster.accounts.model.Properties"/>
    <fullyQualifiedTypeName name="com.bugbuster.cards.config.CardsServiceConfig"/>
    <fullyQualifiedTypeName name="com.bugbuster.cards.model.Properties"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="com.bugbuster.loans.config.LoanServiceConfig"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.context.config.annotation.RefreshScope"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMethod"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="com.bugbuster.accounts.model.Cards"/>
    <fullyQualifiedTypeName name="com.bugbuster.accounts.model.Loans"/>
    <fullyQualifiedTypeName name="com.bugbuster.accounts.service.client.LoansFeignClient"/>
    <fullyQualifiedTypeName name="com.bugbuster.accounts.service.client.CardsFeignClient"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"/>
    <fullyQualifiedTypeName name="com.bugbuster.accounts.model.CustomerDetails"/>
    <fullyQualifiedTypeName name="com.bugbuster.accounts.model.Customer"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.retry.annotation.Retry"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.ratelimiter.annotation.RateLimiter"/>
    <fullyQualifiedTypeName name="java.lang.Throwable"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.RouteLocator"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="org.apache.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.GlobalFilter"/>
    <fullyQualifiedTypeName name="org.springframework.core.annotation.Order"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="reactor.core.publisher.Mono"/>
    <fullyQualifiedTypeName name="org.springframework.web.server.ServerWebExchange"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.GatewayFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestHeader"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="io.micrometer.core.instrument.MeterRegistry"/>
    <fullyQualifiedTypeName name="io.micrometer.core.aop.TimedAspect"/>
    <fullyQualifiedTypeName name="io.micrometer.core.annotation.Timed"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.server.SecurityWebFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.web.server.ServerHttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.Customizer"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.factory.TokenRelayGatewayFilterFactory"/>
</qualifiedTypeNameHistroy>
